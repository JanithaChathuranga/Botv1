// Klo mau pake, pake aja ini bkn enc cma terser aja

import fs from"fs";import path from"path";import archiver from"archiver";import UglifyJS from"uglify-js";import CryptoJS from"crypto-js";let handler=async(m,{conn:conn,text:text})=>{const sourceFolder=text,sourceDir=`./${sourceFolder}`;if(fs.existsSync(sourceDir))try{m.reply("Tunggu sebentar, sedang mengompresi dan mengenkripsi file JavaScript...");const files=fs.readdirSync(sourceDir).filter((file=>file.endsWith(".js"))),encryptedFiles=[];for(const file of files){const filePath=path.join(sourceDir,file),fileContents=fs.readFileSync(filePath,"utf8"),{code:code,error:error}=UglifyJS.minify(fileContents);if(error){console.error(`Terjadi kesalahan dalam mengompresi file ${file}:`,error);continue}const encryptionKey="kunci_enkripsi_anda",encryptedCode=CryptoJS.AES.encrypt(code,encryptionKey).toString(),encryptedFilePath=path.join("../../tmp",file);fs.writeFileSync(encryptedFilePath,encryptedCode),encryptedFiles.push(encryptedFilePath)}if(0===encryptedFiles.length)return void m.reply("Tidak ada file JavaScript yang dapat dikompresi dan dienkripsi.");m.reply("Tunggu sebentar, sedang membuat file zip...");const zipFileName=`${sourceFolder}.zip`,outputZipPath=path.join("../../tmp",zipFileName),output=fs.createWriteStream(outputZipPath),archive=archiver("zip",{zlib:{level:9}});archive.pipe(output);for(const encryptedFile of encryptedFiles)archive.file(encryptedFile,{name:path.basename(encryptedFile)});await archive.finalize(),await conn.sendFile(m.chat,outputZipPath,zipFileName);for(const fileToDelete of[...encryptedFiles,outputZipPath])fs.unlinkSync(fileToDelete)}catch(error){console.error(error),m.reply("Terjadi kesalahan dalam mengompresi, mengenkripsi, dan mengirim file zip")}else m.reply(`Folder "${sourceFolder}" tidak ditemukan.`)};handler.help=["enc <namafolder>"],handler.tags=["owner"],handler.command=/^\enc/i,handler.rowner=!0;export default handler;